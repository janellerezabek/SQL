--Analysis: The final SQL project to demonstrate skills acquired in the Break Into Tech Bootcamp. I used SQL to query a database with multiple tables in it to analyze buying patterns in a digital media store.
--Skills demonstrated: ETL (Extract, Transform, Load), data manipulation

-- #1. List the top 5 most purchased genres, along with the total number of tracks sold for each genre.
SELECT g.Name AS Genre, COUNT(*) AS TracksSold
FROM chinook.genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN invoice_items ii ON t.TrackId = ii.TrackId
GROUP BY g.Name
ORDER BY TracksSold DESC
LIMIT 5;

-- #2. Find the customer who made the highest single purchase (invoice) and display their full name, invoice ID, and total amount spent.
SELECT cus.FirstName, cus.LastName, inv.InvoiceId, inv.Total
FROM chinook.customers cus
JOIN chinook.invoices inv ON inv.CustomerId = cus.CustomerId
ORDER BY inv.Total DESC
LIMIT 1;

-- #3. Identify the artist with the most albums in the dataset. Display the artist's name and the total number of albums.
SELECT ar.Name AS ArtistName, COUNT(DISTINCT al.AlbumId) AS TotalAlbums
FROM chinook.artists ar
JOIN chinook.albums al ON ar.ArtistId = al.ArtistId
GROUP BY ArtistName
ORDER BY TotalAlbums DESC
LIMIT 1;

-- #4. List the top 3 countries with the highest total sales. Show the country name and the total sales amount.
SELECT inv.BillingCountry AS Country, SUM(inv.Total) AS TotalSales
FROM invoices inv
GROUP BY Country
ORDER BY TotalSales DESC
LIMIT 3'

-- #5. Find the customer who spent the least amount overall. Display their full name and the total amount spent.
SELECT cus.FirstName, cus.LastName, SUM(inv.Total) AS TotalAmountSpent
FROM customers cus
JOIN invoices inv ON inv.CustomerId = cus.CustomerId
GROUP BY cus.LastName
ORDER BY TotalAmountSpent
LIMIT 1;

-- #6. Show the total number of tracks available for each media type (e.g., MPEG audio file, AAC audio file, etc.).
SELECT COUNT(t.TrackId) AS TotalTracks, mt.Name AS MediaType
FROM chinook.media_types mt
JOIN chinook.tracks t ON t.MediaTypeId = mt.MediaTypeId
GROUP BY MediaType
ORDER BY TotalTracks DESC;

-- #7. Identify the album with the most tracks. Display the album name, artist, and the number of tracks.
SELECT al.Title AS AlbumName, ar.Name AS ArtistName, COUNT(t.TrackId) AS TotalTracks
FROM albums al
JOIN artists ar ON al.ArtistId = ar.ArtistId
JOIN tracks t ON t.AlbumId = al.AlbumId
GROUP BY AlbumName, ArtistName
ORDER BY TotalTracks DESC
LIMIT 1;

-- #8. List the top 5 customers with the highest total spending. Display their full names and total amount spent.
SELECT c.FirstName || ' ' || c.LastName AS CustomerName, SUM(i.Total) AS TotalAmountSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY CustomerName
ORDER BY TotalAmountSpent DESC
LIMIT 5;

-- #9. Find the most popular track (the one purchased in the most invoices) and display its name and the number of times it was purchased.
SELECT t.Name AS TrackName, COUNT(*) AS TotalPurchases 
FROM invoice_items ite
JOIN invoices inv ON inv.InvoiceId = ite.InvoiceId
JOIN tracks t ON t.TrackId = ite.TrackId
GROUP BY TrackName
ORDER BY TotalPurchases DESC
LIMIT 1;

-- #10. Show the average revenue per invoice for each billing country. Display the country name and the average invoice total.
SELECT BillingCountry AS Country, AVG(Total) AS Avg_Inv_Total
FROM invoices
GROUP BY Country
ORDER BY Avg_Inv_Total DESC;

-- #11. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT c.FirstName || ' ' || c.LastName AS CustomerName, c.CustomerId, c.Country
FROM customers c
WHERE c.Country<>"USA"
ORDER BY CustomerName ASC;

-- #12. Show only the Customers from Brazil.
SELECT c.FirstName || ' ' || c.LastName AS CustomerName
FROM customers c
WHERE c.Country="Brazil"
ORDER BY CustomerName ASC;

-- #13. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName || ' ' || c.LastName AS CustomerName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry
FROM customers c
JOIN invoices inv ON inv.CustomerId = c.CustomerId
WHERE c.Country="Brazil"
ORDER BY CustomerName ASC;

-- #14. Show the Employees who are Sales Agents.
SELECT e.FirstName || ' ' || e.LastName AS EmployeeName
FROM employees e
WHERE e.Title="Sales Support Agent";

-- #15. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices;

-- #16. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT e.FirstName || ' ' || e.LastName AS SalesAgentName, i.*
FROM employees e
JOIN customers c ON e.EmployeeId = c.SupportRepId
JOIN invoices i ON c.CustomerId = i.CustomerId;

-- #17. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT inv.Total, c.FirstName || ' ' || c.LastName AS CustomerName, c.Country, e.FirstName || ' ' || e.LastName AS SalesAgentName
FROM invoices inv
JOIN customers c ON c.CustomerId = inv.CustomerId
JOIN employees e ON e.EmployeeId = c.SupportRepId;

-- #18. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

-- #19. What are the total sales for 2009?
SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

-- #20. Write a query that includes the purchased track name with each invoice line ID.
SELECT ite.InvoiceLineId, t.Name
FROM invoice_items ite
JOIN tracks t ON t.TrackId = ite.TrackId;

-- #21. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT il.InvoiceLineId, t.Name AS TrackName, ar.Name AS ArtistName
FROM invoice_items il
JOIN tracks t ON t.TrackId = il.TrackId 
JOIN albums al ON t.AlbumId = al.AlbumId
JOIN artists ar ON ar.ArtistId = ar.ArtistId;

-- #22. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS TrackName, al.Title AS AlbumName, mt.Name AS MediaType, g.Name AS GenreName
FROM tracks t
JOIN albums al ON al.AlbumId = t.AlbumId
JOIN media_types mt ON mt.MediaTypeId = t.MediaTypeId
JOIN genres g ON g.GenreId = t.GenreId;

-- #23. Show the total sales made by each sales agent.
SELECT e.FirstName || ' ' || e.LastName AS SalesAgentName, ROUND(SUM(inv.Total), 2) AS TotalSales
FROM invoices inv
JOIN customers c ON inv.CustomerId = c.CustomerId
JOIN employees e ON c.SupportRepId = e.EmployeeId
GROUP BY SalesAgentName;

-- #24. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName || ' ' || e.LastName AS SalesAgentName, ROUND(SUM(inv.Total), 2) AS TotalSales
FROM employees e
JOIN customers c ON c.SupportRepId = e.EmployeeId
JOIN invoices inv ON inv.CustomerId = c.CustomerId
WHERE e.Title = 'Sales Support Agent' AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY SalesAgentName
ORDER BY TotalSales DESC
LIMIT 1;

